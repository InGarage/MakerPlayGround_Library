[
  {
    "name": "Accelerometer",
    "children": [
      {
        "id": "Accel_1",
        "name": "Accelerate X",
        "short_description": "Accelerate on x axis",
        "display_text": "{name} {condition} {value} {unit}",
        "params": [
          {
            "name": "Accelerate",
            "control": "NumberExpression",
            "default_value": [
              ">",
              "1",
              "m/s^2"
            ],
            "args": [
              "m/s^2"
            ],
            "regex": "^\\-?(\\d{1,}([.]\\d{1,})?)$"
          },
          {
            "name": "name",
            "control": "textbox",
            "default_value": [
              ""
            ],
            "args": [
              ""
            ],
            "regex": "^[\\S]+$"
          }
        ]
      },
      {
        "id": "Accel_2",
        "name": "Accelerate Y",
        "short_description": "Accelerate on y axis",
        "display_text": "{name}  {condition} {value} {unit}",
        "params": [
          {
            "name": "Accelerate",
            "control": "NumberExpression",
            "default_value": [
              "1"
            ],
            "args": [
              "m/s^2"
            ],
            "regex": "^\\-?(\\d{1,}([.]\\d{1,})?)$"
          },
          {
            "name": "name",
            "control": "textbox",
            "default_value": [
              ""
            ],
            "args": [
              ""
            ],
            "regex": "^[\\S]+$"
          }
        ]
      },
      {
        "id": "Accel_3",
        "name": "Accelerate Z",
        "short_description": "Accelerate on z axis",
        "display_text": "{name}  {condition} {value} {unit}",
        "params": [
          {
            "name": "Accelerate",
            "control": "NumberExpression",
            "default_value": [
              "1"
            ],
            "args": [
              "m/s^2"
            ],
            "regex": "^\\-?(\\d{1,}([.]\\d{1,})?)$"
          },
          {
            "name": "name",
            "control": "textbox",
            "default_value": [
              ""
            ],
            "args": [
              ""
            ],
            "regex": "^[\\S]+$"
          }
        ]
      },
      {
        "id": "Accel_4",
        "name": "Slope X",
        "short_description": "Measure slope on x axis",
        "display_text": "{name}  {condition} {value} {unit}",
        "params": [
          {
            "name": "Angle",
            "control": "NumberExpression",
            "default_value": [
              "180"
            ],
            "args": [
              "degree"
            ],
            "regex": "^(\\d([.]\\d{1,})?|[1-9]\\d([.]\\d{1,})?|[1-2]\\d\\d([.]\\d{1,})?|3[0-5]\\d([.]\\d{1,})?|360)$"
          },
          {
            "name": "name",
            "control": "textbox",
            "default_value": [
              ""
            ],
            "args": [
              ""
            ],
            "regex": "^[\\S]+$"
          }
        ]
      },
      {
        "id": "Accel_5",
        "name": "Slope Y",
        "short_description": "Measure slope on y axis",
        "display_text": "{name}  {condition} {value} {unit}",
        "params": [
          {
            "name": "Angle",
            "control": "NumberExpression",
            "default_value": [
              "180"
            ],
            "args": [
              "degree"
            ],
            "regex": "^(\\d([.]\\d{1,})?|[1-9]\\d([.]\\d{1,})?|[1-2]\\d\\d([.]\\d{1,})?|3[0-5]\\d([.]\\d{1,})?|360)$"
          },
          {
            "name": "name",
            "control": "textbox",
            "default_value": [
              ""
            ],
            "args": [
              ""
            ],
            "regex": "^[\\S]+$"
          }
        ]
      },
      {
        "id": "Accel_6",
        "name": "Slope Z",
        "short_description": "Measure slope z axis",
        "display_text": "{name}  {condition} {value} {unit}",
        "params": [
          {
            "name": "Angle",
            "control": "NumberExpression",
            "default_value": [
              "180"
            ],
            "args": [
              "degree"
            ],
            "regex": "^(\\d([.]\\d{1,})?|[1-9]\\d([.]\\d{1,})?|[1-2]\\d\\d([.]\\d{1,})?|3[0-5]\\d([.]\\d{1,})?|360)$"
          },
          {
            "name": "name",
            "control": "textbox",
            "default_value": [
              ""
            ],
            "args": [
              ""
            ],
            "regex": "^[\\S]+$"
          }
        ]
      },
      {
        "id": "Accel_7",
        "name": "Tap",
        "short_description": "Tap detection",
        "display_text": "{name}  is taped",
        "params": [
          {
            "name": "name",
            "control": "textbox",
            "default_value": [
              ""
            ],
            "args": [
              ""
            ],
            "regex": "^[\\S]+$"
          }
        ]
      },
      {
        "id": "Accel_8",
        "name": "Double Tap",
        "short_description": "Double Tap detection",
        "display_text": "{name} is double taped",
        "params": [
          {
            "name": "name",
            "control": "textbox",
            "default_value": [
              ""
            ],
            "args": [
              ""
            ],
            "regex": "^[\\S]+$"
          }
        ]
      },
      {
        "id": "Accel_9",
        "name": "Free fall",
        "short_description": "Free fall detection",
        "display_text": "{name}  is free fell",
        "params": [
          {
            "name": "name",
            "control": "textbox",
            "default_value": [
              ""
            ],
            "args": [
              ""
            ],
            "regex": "^[\\S]+$"
          }
        ]
      }
    ]
  },
  {
    "name": "Barometer",
    "children": [
      {
        "id": "Barometer_1",
        "name": "Pressure",
        "short_description": "Measure Pressure",
        "display_text": "{name}  {condition} {value} {unit}",
        "params": [
          {
            "name": "Pressure",
            "control": "NumberExpression",
            "default_value": [
              "1000"
            ],
            "args": [
              "hPa"
            ],
            "regex": "^\\-?(\\d{1,}([.]\\d{1,})?)$"
          },
          {
            "name": "name",
            "control": "textbox",
            "default_value": [
              ""
            ],
            "args": [
              ""
            ],
            "regex": "^[\\S]+$"
          }
        ]
      },
      {
        "id": "Barometer_2",
        "name": "Altitude",
        "short_description": "Measure Altitude by using barometer",
        "display_text": "{name}  {condition} {value} {unit}",
        "params": [
          {
            "name": "Altitude",
            "control": "NumberExpression",
            "default_value": [
              "10"
            ],
            "args": [
              "cm"
            ],
            "regex": "^(\\d{1,}([.]\\d{1,})?)$"
          },
          {
            "name": "name",
            "control": "textbox",
            "default_value": [
              ""
            ],
            "args": [
              ""
            ],
            "regex": "^[\\S]+$"
          }
        ]
      }
    ]
  },
  {
    "name": "Temperature",
    "children": [
      {
        "id": "Temp_1",
        "name": "Temperature",
        "short_description": "Measure temperature",
        "display_text": "{name}  {condition} {value} {unit}",
        "params": [
          {
            "name": "Temperature",
            "control": "NumberExpression",
            "default_value": [
              "25"
            ],
            "args": [
              "C"
            ],
            "regex": "^(\\d{1,}([.]\\d{1,})?)$"
          },
          {
            "name": "name",
            "control": "textbox",
            "default_value": [
              ""
            ],
            "args": [
              ""
            ],
            "regex": "^[\\S]+$"
          }
        ]
      }
    ]
  },
  {
    "name": "Button",
    "children": [
      {
        "id": "Button_1",
        "name": "Press",
        "short_description": "Press the button",
        "display_text": "{name} is pressed",
        "params": [
          {
            "name": "name",
            "control": "textbox",
            "default_value": [
              ""
            ],
            "args": [
              ""
            ],
            "regex": "^[\\S]+$"
          }
        ]
      },
      {
        "id": "Button_2",
        "name": "Release",
        "short_description": "Release the button",
        "display_text": "{name} is released",
        "params": [
          {
            "name": "name",
            "control": "textbox",
            "default_value": [
              ""
            ],
            "args": [
              ""
            ],
            "regex": "^[\\S]+$"
          }
        ]
      },
      {
        "id": "Button_3",
        "name": "Press x times",
        "short_description": "Press the button x times",
        "display_text": "{name} is pressed {value} {unit}",
        "params": [
          {
            "name": "Times",
            "control": "NumberExpression",
            "default_value": [
              "3"
            ],
            "args": [
              "times"
            ],
            "regex": "^(\\d{1,})$"
          },
          {
            "name": "name",
            "control": "textbox",
            "default_value": [
              ""
            ],
            "args": [
              ""
            ],
            "regex": "^[\\S]+$"
          }
        ]
      },
      {
        "id": "Button_4",
        "name": "Hold",
        "short_description": "Hold the button",
        "display_text": "{name} is hold {value} {unit}",
        "params": [
          {
            "name": "Time",
            "control": "NumberExpression",
            "default_value": [
              "3"
            ],
            "args": [
              "seconds"
            ],
            "regex": "^(\\d{1,})$"
          },
          {
            "name": "name",
            "control": "textbox",
            "default_value": [
              ""
            ],
            "args": [
              ""
            ],
            "regex": "^[\\S]+$"
          }
        ]
      }
    ]
  },
  {
    "name": "Time",
    "children": [
      {
        "id": "Time_1",
        "name": "Check time",
        "short_description": "Check time in real world",
        "display_text": "When {name} is {value}",
        "params": [
          {
            "name": "Time",
            "control": "NumberExpression",
            "default_value": [
              "13:59:44"
            ],
            "args": [
              ""
            ],
            "regex": "^([01]\\d|2[0-3]):([0-5]\\d):([0-5]\\d)$"
          },
          {
            "name": "name",
            "control": "textbox",
            "default_value": [
              ""
            ],
            "args": [
              ""
            ],
            "regex": "^[\\S]+$"
          }
        ]
      }
    ]
  },
  {
    "name": "General",
    "children": [
      {
        "id": "General_1",
        "name": "Delay",
        "short_description": "Delay time",
        "display_text": "Delay {value} {unit}",
        "params": [
          {
            "name": "Time",
            "control": "NumberExpression",
            "default_value": [
              "1000"
            ],
            "args": [
              "milliseconds"
            ],
            "regex": "^(\\d{1,})$"
          }
        ]
      },
      {
        "id": "General_2",
        "name": "General Analog",
        "short_description": "Compare voltage from the whole analog input",
        "display_text": "{name}  {condition} {value} {unit}",
        "params": [
          {
            "name": "Voltage",
            "control": "NumberExpression",
            "default_value": [
              "3000"
            ],
            "args": [
              "millivolts"
            ],
            "regex": "^(\\d{1,}([.]\\d{1,})?)$"
          },
          {
            "name": "name",
            "control": "textbox",
            "default_value": [
              ""
            ],
            "args": [
              ""
            ],
            "regex": "^[\\S]+$"
          }
        ]
      },
      {
        "id": "General_3",
        "name": "General Digital",
        "short_description": "Compare logic from the digital device",
        "display_text": "{name}  {condition} {value}",
        "params": [
          {
            "name": "State",
            "control": "Radio",
            "default_value": [
              "HIGH"
            ],
            "args": [
              "HIGH",
              "LOW"
            ],
            "regex": ""
          },
          {
            "name": "name",
            "control": "textbox",
            "default_value": [
              ""
            ],
            "args": [
              ""
            ],
            "regex": "^[\\S]+$"
          }
        ]
      }
    ]
  },
  {
    "name": "Gyroscope",
    "children": [
      {
        "id": "Gyro_1",
        "name": "Rotate X",
        "short_description": "Detect rotation on x axis in dps units",
        "display_text": "{name}  {condition} {value} {unit}",
        "params": [
          {
            "name": "Rotation",
            "control": "NumberExpression",
            "default_value": [
              "100"
            ],
            "args": [
              "dps"
            ],
            "regex": "^(\\d{1,}([.]\\d{1,})?)$"
          },
          {
            "name": "name",
            "control": "textbox",
            "default_value": [
              ""
            ],
            "args": [
              ""
            ],
            "regex": "^[\\S]+$"
          }
        ]
      },
      {
        "id": "Gyro_2",
        "name": "Rotate Y",
        "short_description": "Detect rotation on y axis in dps units",
        "display_text": "{name}  {condition} {value} {unit}",
        "params": [
          {
            "name": "Rotation",
            "control": "NumberExpression",
            "default_value": [
              "100"
            ],
            "args": [
              "dps"
            ],
            "regex": "^(\\d{1,}([.]\\d{1,})?)$"
          },
          {
            "name": "name",
            "control": "textbox",
            "default_value": [
              ""
            ],
            "args": [
              ""
            ],
            "regex": "^[\\S]+$"
          }
        ]
      },
      {
        "id": "Gyro_3",
        "name": "Rotate Z",
        "short_description": "Detect rotation on z axis in dps units",
        "display_text": "{name}  {condition} {value} {unit}",
        "params": [
          {
            "name": "Rotation",
            "control": "NumberExpression",
            "default_value": [
              "100"
            ],
            "args": [
              "dps"
            ],
            "regex": "^(\\d{1,}([.]\\d{1,})?)$"
          },
          {
            "name": "name",
            "control": "textbox",
            "default_value": [
              ""
            ],
            "args": [
              ""
            ],
            "regex": "^[\\S]+$"
          }
        ]
      }
    ]
  },
  {
    "name": "Humidity",
    "children": [
      {
        "id": "Humid_1",
        "name": "Humidity",
        "short_description": "Measure Humidity",
        "display_text": "{name}  {condition} {value} {unit}",
        "params": [
          {
            "name": "Humidity",
            "control": "Slider",
            "default_value": [
              "30"
            ],
            "args": [
              "%"
            ],
            "regex": "^(\\d([.]\\d{1,})?|[1-9]\\d([.]\\d{1,})?|100)$"
          },
          {
            "name": "name",
            "control": "textbox",
            "default_value": [
              ""
            ],
            "args": [
              ""
            ],
            "regex": "^[\\S]+$"
          }
        ]
      }
    ]
  },
  {
    "name": "Light",
    "children": [
      {
        "id": "Light_1",
        "name": "Illuminance",
        "short_description": "Measure Illuminance",
        "display_text": "{name} {condition} {value} {unit}",
        "params": [
          {
            "name": "Illuminance",
            "control": "NumberExpression",
            "default_value": [
              ""
            ],
            "args": [
              "Lux"
            ],
            "regex": "^(\\d{1,}([.]\\d{1,})?)$"
          },
          {
            "name": "name",
            "control": "textbox",
            "default_value": [
              ""
            ],
            "args": [
              ""
            ],
            "regex": "^[\\S]+$"
          }
        ]
      },
      {
        "id": "Light_2",
        "name": "Color",
        "short_description": "Detect color",
        "display_text": "{name} {condition} {value}",
        "params": [
          {
            "name": "Color",
            "control": "Color",
            "default_value": [
              "#FFFFFF"
            ],
            "args": [
              ""
            ],
            "regex": "^#(\\d|[A-F]){6,6}$"
          },
          {
            "name": "name",
            "control": "textbox",
            "default_value": [
              ""
            ],
            "args": [
              ""
            ],
            "regex": "^[\\S]+$"
          }
        ]
      }
    ]
  },
  {
    "name": "LiquidLevel",
    "children": [
      {
        "id": "Liquid_1",
        "name": "Liquid Level",
        "short_description": "Measure Liquid level",
        "display_text": "{name} {condition} {value} {unit}",
        "params": [
          {
            "name": "Level",
            "control": "NumberExpression",
            "default_value": [
              "15"
            ],
            "args": [
              "cm"
            ],
            "regex": "^(\\d{1,}([.]\\d{1,})?)$"
          },
          {
            "name": "name",
            "control": "textbox",
            "default_value": [
              ""
            ],
            "args": [
              ""
            ],
            "regex": "^[\\S]+$"
          }
        ]
      },
      {
        "id": "Liquid_2",
        "name": "Liquid Pressure",
        "short_description": "Measure Liquid Pressure",
        "display_text": "{name} {condition} {value} {unit}",
        "params": [
          {
            "name": "Pressure",
            "control": "NumberExpression",
            "default_value": [
              "500"
            ],
            "args": [
              "pa"
            ],
            "regex": "^\\-?(\\d{1,}([.]\\d{1,})?)$"
          },
          {
            "name": "name",
            "control": "textbox",
            "default_value": [
              ""
            ],
            "args": [
              ""
            ],
            "regex": "^[\\S]+$"
          }
        ]
      },
      {
        "id": "Liquid_3",
        "name": "Liquid Flow",
        "short_description": "Measure Liquid Flow",
        "display_text": "{name} {condition} {value} {unit}",
        "params": [
          {
            "name": "Volume per sec",
            "control": "NumberExpression",
            "default_value": [
              "0.000301"
            ],
            "args": [
              "m^3/s"
            ],
            "regex": "^\\-?(\\d{1,}([.]\\d{1,})?)$"
          },
          {
            "name": "name",
            "control": "textbox",
            "default_value": [
              ""
            ],
            "args": [
              ""
            ],
            "regex": "^[\\S]+$"
          }
        ]
      }
    ]
  },
  {
    "name": "Magnetometer",
    "children": [
      {
        "id": "Mag_1",
        "name": "Compass",
        "short_description": "Detect 8 directions",
        "display_text": "{name} {condition} {value}",
        "params": [
          {
            "name": "Direction",
            "control": "Dropdown",
            "default_value": [
              ""
            ],
            "args": [
              "NE",
              "N",
              "E",
              "W",
              "NW",
              "S",
              "SW",
              "SE"
            ],
            "regex": ""
          },
          {
            "name": "name",
            "control": "textbox",
            "default_value": [
              ""
            ],
            "args": [
              ""
            ],
            "regex": "^[\\S]+$"
          }
        ]
      },
      {
        "id": "Mag_2",
        "name": "Magnetic X",
        "short_description": "Detect Magnetic on x axis",
        "display_text": "{name} {condition} {value} {unit}",
        "params": [
          {
            "name": "Magnetic",
            "control": "NumberExpression",
            "default_value": [
              "0.0003"
            ],
            "args": [
              "t"
            ],
            "regex": "^(\\d{1,}([.]\\d{1,})?)$"
          },
          {
            "name": "name",
            "control": "textbox",
            "default_value": [
              ""
            ],
            "args": [
              ""
            ],
            "regex": "^[\\S]+$"
          }
        ]
      },
      {
        "id": "Mag_3",
        "name": "Magnetic Y",
        "short_description": "Detect Magnetic on y axis",
        "display_text": "{name} {condition} {value} {unit}",
        "params": [
          {
            "name": "Magnetic",
            "control": "NumberExpression",
            "default_value": [
              "0.0003"
            ],
            "args": [
              "t"
            ],
            "regex": "^(\\d{1,}([.]\\d{1,})?)$"
          },
          {
            "name": "name",
            "control": "textbox",
            "default_value": [
              ""
            ],
            "args": [
              ""
            ],
            "regex": "^[\\S]+$"
          }
        ]
      },
      {
        "id": "Mag_4",
        "name": "Magnetic Z",
        "short_description": "Detect Magnetic on z axis",
        "display_text": "{name}  {condition} {value} {unit}",
        "params": [
          {
            "name": "Magnetic",
            "control": "NumberExpression",
            "default_value": [
              "0.0003"
            ],
            "args": [
              "t"
            ],
            "regex": "^(\\d{1,}([.]\\d{1,})?)$"
          },
          {
            "name": "name",
            "control": "textbox",
            "default_value": [
              ""
            ],
            "args": [
              ""
            ],
            "regex": "^[\\S]+$"
          }
        ]
      }
    ]
  },
  {
    "name": "Gesture",
    "children": [
      {
        "id": "Gesture_1",
        "name": "Gesture",
        "short_description": "Detect Gesture",
        "display_text": "{name} {condition} {value}",
        "params": [
          {
            "name": "Gesture",
            "control": "Dropdown",
            "default_value": [
              ""
            ],
            "args": [
              "L->R",
              "R->L",
              "Top-Down",
              "Down->Top",
              "Near->Far",
              "Far->Near"
            ],
            "regex": ""
          },
          {
            "name": "name",
            "control": "textbox",
            "default_value": [
              ""
            ],
            "args": [
              ""
            ],
            "regex": "^[\\S]+$"
          }
        ]
      }
    ]
  },
  {
    "name": "Proximity",
    "children": [
      {
        "id": "Proximity_1",
        "name": "PIR",
        "short_description": "Detect motion and heat",
        "display_text": "{name} {condition} {value}",
        "params": [
          {
            "name": "Sensitive",
            "control": "NumberExpression",
            "default_value": [
              "700"
            ],
            "args": [
              ""
            ],
            "regex": "^(\\d|[1-9]\\d{1,2}|10([0-1]\\d)|(102[0-3]))$"
          },
          {
            "name": "name",
            "control": "textbox",
            "default_value": [
              ""
            ],
            "args": [
              ""
            ],
            "regex": "^[\\S]+$"
          }
        ]
      },
      {
        "id": "Proximity_2",
        "name": "Distance",
        "short_description": "Measure distance",
        "display_text": "{name} {condition} {value} {unit}",
        "params": [
          {
            "name": "Distance",
            "control": "NumberExpression",
            "default_value": [
              "70"
            ],
            "args": [
              "cm"
            ],
            "regex": "^(\\d{1,}([.]\\d{1,})?)$"
          },
          {
            "name": "name",
            "control": "textbox",
            "default_value": [
              ""
            ],
            "args": [
              ""
            ],
            "regex": "^[\\S]+$"
          }
        ]
      }
    ]
  },
  {
    "name": "Sound",
    "children": [
      {
        "id": "Sound_1",
        "name": "Volume",
        "short_description": "Measure volume",
        "display_text": "{name} {condition} {value} {unit}",
        "params": [
          {
            "name": "Volume",
            "control": "NumberExpression",
            "default_value": [
              "30"
            ],
            "args": [
              "db"
            ],
            "regex": "^(\\d([.]\\d{1,})?|[1-9]\\d([.]\\d{1,})?|1[0-1]\\d([.]\\d{1,})?|120)$"
          },
          {
            "name": "name",
            "control": "textbox",
            "default_value": [
              ""
            ],
            "args": [
              ""
            ],
            "regex": "^[\\S]+$"
          }
        ]
      }
    ]
  },
  {
    "name": "Communication",
    "children": [
      {
        "id": "Comm_1",
        "name": "Text Receive",
        "short_description": "Check Text Receive",
        "display_text": "{name} is {value}",
        "params": [
          {
            "name": "Text",
            "control": "Textbox",
            "default_value": [
              "Hello Arduino"
            ],
            "args": [
              ""
            ],
            "regex": "^[\\S]+$"
          },
          {
            "name": "name",
            "control": "textbox",
            "default_value": [
              ""
            ],
            "args": [
              ""
            ],
            "regex": "^[\\S]+$"
          }
        ]
      },
      {
        "id": "Comm_2",
        "name": "RFID",
        "short_description": "Check RFID",
        "display_text": "{name} is {value}",
        "params": [
          {
            "name": "Text",
            "control": "Textbox",
            "default_value": [
              ""
            ],
            "args": [
              ""
            ],
            "regex": "^[\\S]+$"
          },
          {
            "name": "name",
            "control": "textbox",
            "default_value": [
              ""
            ],
            "args": [
              ""
            ],
            "regex": "^[\\S]+$"
          }
        ]
      }
    ]
  }
]